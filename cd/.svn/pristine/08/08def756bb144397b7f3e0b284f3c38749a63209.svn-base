package com.wk.cd.module.dao;

import java.util.List;

import com.wk.cd.enu.TEMPLATE_TYPE;
import com.wk.cd.module.info.TpParamGroupInfo;
import com.wk.lang.Inject;

/**
 * Class description:实例参数组数据表
 * @author AutoGen
 */
public class TpParamGroupDaoService {

	@Inject
	private TpParamGroupDao dao;

	/**
	 * 根据主键查询一条记录
	 * @param TpParamGroupInfo info
	 * @return TpParamGroupInfo
	 */
	public TpParamGroupInfo getInfoByKey(TpParamGroupInfo info) {
		return dao.get(info);
	}

	/**
	 * 根据主键查询一条记录并对记录加锁
	 * @param TpParamGroupInfo info
	 * @return TpParamGroupInfo
	 */
	public TpParamGroupInfo getInfoByKeyForUpdate(TpParamGroupInfo info) {
		return dao.getForUpdate(info);
	}

	/**
	 * 插入一条记录
	 * @param TpParamGroupInfo info
	 * @return int
	 */
	public int insertInfo(TpParamGroupInfo info) {
		return dao.insert(info);
	}

	/**
	 * 插入多条记录
	 * @param List<TpParamGroupInfo>
	 * @return int
	 */
	public int insertListInfo(List<TpParamGroupInfo> infos) {
		return dao.insert(infos);
	}

	/**
	 * Description: 根据业务系统名、项目编号、上线包名称查询多条记录
	 * @param business_sys_name
	 * @param project_name
	 * @param propackage_name
	 * @return
	 */
	public List<TpParamGroupInfo> getListInfoByBsAndPj(
			String business_sys_name, String project_name,
			String propackage_name, String node_type) {
		return dao.getListInfoByBsAndPj(business_sys_name, project_name,
				business_sys_name, project_name, propackage_name,
				business_sys_name, project_name, node_type);
	}

	/**
	 * Description: 根据业务系统名、项目编号、模板类型删除多条记录
	 * @param business_sys_name
	 * @param project_name
	 * @return
	 */
	public int deleteListInfoByBsAndPj(String business_sys_name,
			String project_name, TEMPLATE_TYPE template_type) {
		return dao.deleteListInfoByBsAndPj(business_sys_name,
				project_name, template_type);
	}

	/**
	 * Description: 根据业务系统名、项目编号、模板类型 查询多条记录
	 * @param business_sys_name
	 * @param project_name
	 * @param template_type
	 * @return
	 */
	public List<TpParamGroupInfo> queryInfoByBsAndPjAndType(
			String business_sys_name, String project_name,
			TEMPLATE_TYPE template_type) {
		return dao.queryInfoByBsAndPjAndType(business_sys_name,
				project_name, template_type);
	}

	/**
	 * Description: 根据投产包名和模板类型查询对应的投产包参数
	 * @return
	 */
	public List<TpParamGroupInfo> queryParamsByDppAndType(
			String business_sys_name, String project_name,
			String propackage_name, TEMPLATE_TYPE template_type) {
		return dao.queryParamsByDppAndType(business_sys_name,
				project_name, propackage_name, template_type);
	}
}