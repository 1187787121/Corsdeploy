/**
 * Title: UpdatePublishProgDetailAction.java
 * File Description: 修改发布方案的拓展信息
 * @copyright: 2016
 * @company: CORSWORK
 * @author: zhangj
 * @version: 1.0
 * @date: 2016年12月14日
 */
package com.wk.cd.build.ea.action;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import com.wk.cd.build.ea.bean.AddPublishProgDetailInputBean;
import com.wk.cd.build.ea.bean.PhasePublishBean;
import com.wk.cd.build.ea.bean.UpdatePublishProgDetailInputBean;
import com.wk.cd.build.ea.bean.UpdatePublishProgDetailOutputBean;
import com.wk.cd.build.ea.dao.PgProgramDaoService;
import com.wk.cd.build.ea.dao.PgReleDaoService;
import com.wk.cd.build.ea.dao.UuSocDaoService;
import com.wk.cd.build.ea.info.PgProgramInfo;
import com.wk.cd.build.ea.info.UuSocInfo;
import com.wk.cd.build.ea.service.EnvProgPublicService;
import com.wk.cd.common.util.Assert;
import com.wk.cd.enu.IS_PUBLISH;
import com.wk.cd.module1.entity.Program;
import com.wk.cd.module1.xml1.XmlWriter;
import com.wk.cd.service.ActionBasic;
import com.wk.cd.system.lg.service.ActionLogPublicService;
import com.wk.lang.Inject;
import com.wk.logging.Log;
import com.wk.logging.LogFactory;

/**
 * Class Description:修改发布方案的拓展信息
 * @author Zhangj
 */
public class UpdatePublishProgDetailAction
		extends ActionBasic<UpdatePublishProgDetailInputBean, UpdatePublishProgDetailOutputBean> {
	@Inject
	private PgReleDaoService pgReleDaoService;
	@Inject
	private EnvProgPublicService envProgPublicService;
	@Inject
	private PgProgramDaoService pgProgramDaoService;
	@Inject
	private UuSocDaoService uuSocDaoService;
	@Inject
	private ActionLogPublicService lgsvc;
	private static final Log logger = LogFactory.getLog();
	private static final String SUFFIX_ROLL = "rollback";

	/**
	 * Description: 修改发布方案的拓展信息
	 * @param input
	 * @return
	 */
	@Override
	protected UpdatePublishProgDetailOutputBean doAction(UpdatePublishProgDetailInputBean input) {
		logger.info("-----------UpdatePublishProgDetailAction begin----------");
		// 获取基础数据并非空校验---------------------------
		checkNull(input);
		UpdatePublishProgDetailOutputBean output = new UpdatePublishProgDetailOutputBean();
//		PhasePublishBean[] rol_phase_list = input.getRol_phase_list();
//		String rol_template_name = input.getRol_template_name();
//		String pub_template_name = input.getPub_template_name();
		
		Program pub_program = input.getPub_program();
		Program rol_program = input.getRol_program();
		
		XmlWriter.write(pub_program);
		
		String prog_id = pub_program.getProg_id();
		if(!Assert.isEmpty(pub_program.getRol_template_name())) {
			rol_program.setProg_id(prog_id+SUFFIX_ROLL);
			XmlWriter.write(rol_program);
		}
		pgProgramDaoService.updatePgProgramByKey(pub_program.getProg_name(), prog_id);
		// 修改方案状态为未发布
		pgProgramDaoService.updatePgPublishStateByKey(IS_PUBLISH.NO,prog_id);
		// 修改前删除------------------
		logger.debug("保存发布方案的PROG_ID[{}]", prog_id);
		envProgPublicService.checkProgIdIsNotExist(prog_id);
		
		
		
		
//		// 删除方案阶段表和 阶段数据源关联表
//		envProgPublicService.deletePubByProgId(prog_id);
//		// 删除方案参数表
//		envProgPublicService.deleteUuParamById(prog_id);
//		// 删除版本机数据源
//		envProgPublicService.deletePubVerSocByProgId(prog_id);
//		// 插入发布的参数和步骤表
//		String pub_param_id = UUID.randomUUID().toString().replace("-", "");
//		envProgPublicService.insertUuParam(input.getPub_param_list(), pub_param_id);
//		pgReleDaoService.updatePubUuParam(pub_param_id, prog_id);
//		envProgPublicService.insertReleStep(input.getPub_phase_list(), input.getPub_template_name(), prog_id);
//		// 修改发布方案扩展表的模板名字段
//		pgReleDaoService.updatePubTemplateName(pub_template_name, prog_id);
//		if (!Assert.isEmpty(rol_phase_list) && !Assert.isEmpty(rol_template_name)) {
//			String rol_param_id = UUID.randomUUID().toString().replace("-", "");
//			envProgPublicService.insertUuParam(input.getRol_param_list(), rol_param_id);
//			pgReleDaoService.updateRolUuParam(rol_param_id, prog_id);
//			envProgPublicService.insertReleStep(rol_phase_list, input.getRol_template_name(), prog_id);
//			pgReleDaoService.updateRolTemplateName(rol_template_name, prog_id);
//		}
//		String ver_soc_uuid = UUID.randomUUID().toString().replace("-", "");
//		UuSocInfo usi = new UuSocInfo();
//		usi.setSoc_bk_seq(1);
//		usi.setVer_server_name(input.getVer_server_name());
//		usi.setVer_soc_name(input.getVer_soc_name());
//		usi.setExe_server_name(input.getVer_server_name());
//		usi.setExe_soc_name(input.getVer_soc_name());
//		usi.setCode_bk_dir(input.getCode_bk_dir());
//		usi.setSoc_uuid(ver_soc_uuid);
//		uuSocDaoService.insertInfo(usi);
//		pgReleDaoService.updateVerSoc(ver_soc_uuid, prog_id);
		logger.info("-----------UpdatePublishProgDetailAction end----------");
		return output;
	}

	/**
	 * Description:
	 * @param input
	 * @return
	 */
	@Override
	protected String getLogTxt(UpdatePublishProgDetailInputBean input) {
		List<String> log_lst = new ArrayList<String>();
		log_lst.add("发布模板: " + input.getPub_template_name());
		log_lst.add("回退模板: " + input.getRol_template_name());
		return lgsvc.getLogTxt("修改环境发布方案", log_lst);
	}

	/**
	 * Description: 非空校验
	 * @param input
	 */
	private void checkNull(UpdatePublishProgDetailInputBean input) {
		Program program = input.getPub_program();
		Assert.assertNotEmpty(program, AddPublishProgDetailInputBean.PUB_PROGRAMCN);
		Assert.assertNotEmpty(program.getProg_name(), Program.PROG_NAMECN);
		Assert.assertNotEmpty(program.getPub_template_name(), Program.PUB_TEMPLATE_NAMECN);
		Assert.assertNotEmpty(program.getVer_server_name(), Program.VER_SERVER_NAMECN);
		Assert.assertNotEmpty(program.getVer_soc_name(), Program.VER_SOC_NAMECN);
		Assert.assertNotEmpty(program.getCode_bk_dir(), Program.CODE_BK_DIRCN);
		Assert.assertNotEmpty(program.getProg_type(), Program.PROG_TYPECN);
		Assert.assertNotEmpty(program.getPhase_list(), Program.PHASE_LISTCN);
		
//		Assert.assertNotEmpty(input.getPub_phase_list(), UpdatePublishProgDetailInputBean.PUB_PHASE_LISTCN);
//		Assert.assertNotEmpty(input.getPub_param_list(), UpdatePublishProgDetailInputBean.PUB_PARAM_LISTCN);
//		Assert.assertNotEmpty(input.getPub_template_name(), UpdatePublishProgDetailInputBean.PUB_TEMPLATE_NAMECN);
//		Assert.assertNotEmpty(input.getEnv_name(), UpdatePublishProgDetailInputBean.ENV_NAMECN);
//		Assert.assertNotEmpty(input.getProg_name(), UpdatePublishProgDetailInputBean.PROG_NAMECN);
//		Assert.assertNotEmpty(input.getProg_id(), UpdatePublishProgDetailInputBean.PROG_IDCN);
//		Assert.assertNotEmpty(input.getVer_server_name(), UpdatePublishProgDetailInputBean.VER_SERVER_NAMECN);
//		Assert.assertNotEmpty(input.getVer_soc_name(), UpdatePublishProgDetailInputBean.VER_SOC_NAMECN);
//		Assert.assertNotEmpty(input.getCode_bk_dir(), UpdatePublishProgDetailInputBean.CODE_BK_DIRCN);
	}

}
